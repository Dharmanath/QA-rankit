import numpy as np
import pandas as pd
DEFAULT_AP = 0 # if the question has no answer in the candidates
DEFAULT_RR = 0
def AP(series):
    '''
    Average Precision, for one question
    arr is a Series of {0, 1}
    '''
    n = len(arr)
    csum, num_ans = arr.cumsum(), arr.sum()
    pos = np.arange(1, n + 1).astype(float)
    res = DEFAULT_AP if num_ans == 0 else ((csum / pos * arr).sum() / num_ans)
    return res

def RR(series):
    '''
    Reciprocal Rank, for one question
    arr is a Series of {0, 1}
    '''
    num_ans = arr.sum()
    res = DEFAULT_RR if num_ans == 0 else 1. / (list(arr).index(1) + 1)
    return res

# grp is a SeriesGroupBy object, generated by code like
# grp = features_trn.Label.groupby(features_trn.QuestionID)
MAP = lambda grp : grp.agg(AP).mean()
MRR = lambda grp : grp.agg(RR).mean()
